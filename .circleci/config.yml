# yaml-language-server: $schema=http://json.schemastore.org/circleciconfig
version: 2.1

orbs:
  shellcheck: circleci/shellcheck@2.2.4

executors:
  host-platform:
    machine:
      image: ubuntu-2004:202104-01
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine@sha256:35882cba254810c7de458528011e935ba2c4f3ebcb224275dfa7ebfa930ef294

workflows:
  test_and_release:
    jobs:
      - prep-deps
      - test-deps:
          requires:
            - prep-deps
      - create-pr:
          requires:
            - prep-deps
            - test-deps
          filters:
            branches:
              only:
                - /^Version-v(\d+)[.](\d+)[.](\d+)/
      - create-lm:
          filters:
            branches:
              only:
                - /^Version-v(\d+)[.](\d+)[.](\d+)|master/
          requires:
            - prep-deps
            - test-deps

      - test-lint:
          requires:
            - test-deps
            - create-pr
      - test-lint-ff:
          requires:
            - test-deps
            - create-pr
      - test-lint-lf:
          requires:
            - test-deps
            - create-pr
      - test-lint-cl:
          requires:
            - test-deps
            - create-pr
      - test-lint-sc:
          requires:
            - test-deps
            - create-pr

      - prep-story:
          requires:
            - test-lint
            - test-lint-ff
            - test-lint-lf
            - test-lint-cl
            - test-lint-sc
      - prep-build:
          requires:
            - prep-story
      - prep-build-test:
          requires:
            - prep-build
      - prep-build-test-metrics:
          requires:
            - prep-build-test

      - test-unit:
          requires:
            - prep-build-test-metrics
      - test-unit-global:
          requires:
            - prep-build-test-metrics
      - test-unit-source:
          requires:
            - prep-build-test-metrics

      - test-e2e-chrome:
          requires:
            - test-unit
            - test-unit-global
            - test-unit-source
      - test-e2e-firefox:
          requires:
            - test-unit
            - test-unit-global
            - test-unit-source
      - test-e2e-chrome-metrics:
          requires:
            - test-e2e-chrome
      - test-e2e-firefox-metrics:
          requires:
            - test-e2e-firefox

      - all-passing:
          requires:
            - test-e2e-chrome-metrics
            - test-e2e-firefox-metrics
      - all-metrics:
          requires:
            - test-e2e-chrome-metrics
            - test-e2e-firefox-metrics

      - job-publish-docs:
          requires:
            - all-passing
            - all-metrics
      - job-publish-beta:
          filters:
            branches:
              only: develop
          requires:
            - all-passing
            - all-metrics
      - job-publish-prod:
          filters:
            branches:
              only: master
          requires:
            - all-passing
            - all-metrics

jobs:
  prep-deps:
    executor: host-platform
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Install deps
          command: |
            .circleci/scripts/deps-install.sh
      - save_cache:
          key: dependency-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
            - build-artifacts/yarn-install-har/
      - run:
          name: Postinstall
          command: |
            yarn setup:postinstall
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
          - build-artifacts
  test-deps:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: yarn audit
          command: .circleci/scripts/yarn-audit.sh
  create-pr:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Bump manifest version
          command: .circleci/scripts/release-bump-manifest-version.sh
      - run:
          name: Update changelog
          command: yarn update-changelog --rc
      - run:
          name: Commit changes
          command: .circleci/scripts/release-commit-version-bump.sh
      - run:
          name: Create GitHub Pull Request for version
          command: .circleci/scripts/release-create-release-pr.sh
  create-lm:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate allow-scripts config
          command: |
            .circleci/scripts/validate-allow-scripts.sh
      - run:
          name: Validate LavaMoat policy
          command: |
            .circleci/scripts/validate-lavamoat-policy.sh

  test-lint:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Verify locales
          command: yarn verify-locales --quiet
  test-lint-lf:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: lockfile-lint
          command: yarn lint:lockfile
  test-lint-cl:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate changelog
                command: yarn auto-changelog validate
      - when:
          condition:
            matches:
              pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate release candidate changelog
                command: yarn auto-changelog validate --rc
  test-lint-sc:
    executor: shellcheck
    steps:
      - checkout
      - run: apk add --no-cache bash jq yarn
      - run:
          name: ShellCheck Lint
          command: ./development/shellcheck.sh
  test-lint-ff:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:mozilla-lint
          command: NODE_OPTIONS=--max_old_space_size=3072 yarn mozilla-lint

  prep-story:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build Storybook
          command: yarn storybook:build
      - persist_to_workspace:
          root: .
          paths:
            - storybook-build
  prep-build:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:dist
          command: yarn dist
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - builds
  prep-build-test:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test
      - persist_to_workspace:
          root: .
          paths:
            - dist-test
            - builds-test
  prep-build-test-metrics:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing metrics
          command: yarn build:test:metrics
      - run:
          name: Move test build to 'dist-test-metrics' to avoid conflict with production build
          command: mv ./dist ./dist-test-metrics
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-metrics
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-metrics
            - builds-test-metrics

  test-unit:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:coverage
          command: yarn test:coverage
      - run:
          name: test:coverage:jest
          command: yarn test:coverage:jest
      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output
            - coverage
            - jest-coverage
  test-unit-global:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: test:unit:global
          command: yarn test:unit:global
  test-unit-source:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  test-e2e-chrome:
    executor: host-platform
    steps:
      - checkout
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:chrome
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
  test-e2e-firefox:
    executor: host-platform
    steps:
      - checkout
      - run:
          name: Install Firefox
          command: ./.circleci/scripts/firefox-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:firefox
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:firefox --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
  test-e2e-chrome-metrics:
    executor: host-platform
    steps:
      - checkout
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-metrics ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-metrics ./builds
      - run:
          name: test:e2e:chrome:metrics
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:metrics --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
  test-e2e-firefox-metrics:
    executor: host-platform
    steps:
      - checkout
      - run:
          name: Install Firefox
          command: ./.circleci/scripts/firefox-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-metrics ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-metrics ./builds
      - run:
          name: test:e2e:firefox:metrics
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:firefox:metrics --retries 2
            fi
          no_output_timeout: 20m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts

  all-passing:
    executor: host-platform
    steps:
      - run:
          name: All Tests Passed
          command: echo 'weew - everything passed!'
  all-metrics:
    executor: host-platform
    steps:
      - checkout
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Run page load benchmark
          command: yarn benchmark:chrome --out test-artifacts/chrome/benchmark/pageload.json --retries 2
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

  job-publish-docs:
    executor: host-platform
    steps:
      - add_ssh_keys:
          fingerprints:
            - "23:71:99:53:66:ef:4e:0b:86:d9:a3:66:7c:60:8a:2a"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: storybook:deploy
          command: |
            git remote add storybook git@github.com:CThrew/theStory.git
            yarn storybook:deploy
  job-publish-beta:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:source-map-explorer
          command: ./development/source-map-explorer.sh
      - store_artifacts:
          path: dist/sourcemaps
          destination: builds/sourcemaps
      - store_artifacts:
          path: builds
          destination: builds
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_artifacts:
          path: jest-coverage
          destination: jest-coverage
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      # important: generate lavamoat viz AFTER uploading builds as artifacts
      # Temporarily disabled until we can update to a version of `sesify` with
      # this fix included: https://github.com/LavaMoat/LavaMoat/pull/121
      - run:
          name: build:lavamoat-viz
          command: ./.circleci/scripts/create-lavamoat-viz.sh
      - store_artifacts:
          path: build-artifacts
          destination: build-artifacts
      - store_artifacts:
          path: storybook-build
          destination: storybook
      - run:
          name: build:announce
          command: ./development/metamaskbot-build-announce.js
  job-publish-prod:
    executor: host-platform
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: sentry sourcemaps upload
          command: SENTRY_ORG=metamask SENTRY_PROJECT=metamask yarn sentry:publish
      - run:
          name: Create GitHub release
          command: |
            .circleci/scripts/release-create-gh-release.sh
